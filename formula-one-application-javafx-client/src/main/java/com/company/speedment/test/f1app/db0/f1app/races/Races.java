package com.company.speedment.test.f1app.db0.f1app.races;

import com.speedment.Entity;
import com.speedment.field.ComparableField;
import com.speedment.field.StringField;
import com.speedment.internal.core.field.ComparableFieldImpl;
import com.speedment.internal.core.field.StringFieldImpl;
import java.sql.Date;
import java.sql.Time;
import java.util.Optional;
import javax.annotation.Generated;

/**
 * An interface representing an entity (for example, a row) in the
 * com.speedment.internal.ui.config.TableProperty@61308848.
 * <p>
 * This Class or Interface has been automatically generated by Speedment. Any
 * changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public interface Races extends Entity<Races> {
    
    /**
     * This Field corresponds to the {@link Races} field that can be obtained
     * using the {@link Races#getRaceId()} method.
     */
    public final static ComparableField<Races, Integer> RACEID = new ComparableFieldImpl<>("raceId", Races::getRaceId, Races::setRaceId);
    /**
     * This Field corresponds to the {@link Races} field that can be obtained
     * using the {@link Races#getYear()} method.
     */
    public final static ComparableField<Races, Integer> YEAR = new ComparableFieldImpl<>("year", Races::getYear, Races::setYear);
    /**
     * This Field corresponds to the {@link Races} field that can be obtained
     * using the {@link Races#getRound()} method.
     */
    public final static ComparableField<Races, Integer> ROUND = new ComparableFieldImpl<>("round", Races::getRound, Races::setRound);
    /**
     * This Field corresponds to the {@link Races} field that can be obtained
     * using the {@link Races#getCircuitId()} method.
     */
    public final static ComparableField<Races, Integer> CIRCUITID = new ComparableFieldImpl<>("circuitId", Races::getCircuitId, Races::setCircuitId);
    /**
     * This Field corresponds to the {@link Races} field that can be obtained
     * using the {@link Races#getName()} method.
     */
    public final static StringField<Races> NAME = new StringFieldImpl<>("name", Races::getName, Races::setName);
    /**
     * This Field corresponds to the {@link Races} field that can be obtained
     * using the {@link Races#getDate()} method.
     */
    public final static ComparableField<Races, Date> DATE = new ComparableFieldImpl<>("date", Races::getDate, Races::setDate);
    /**
     * This Field corresponds to the {@link Races} field that can be obtained
     * using the {@link Races#getTime()} method.
     */
    public final static ComparableField<Races, Time> TIME = new ComparableFieldImpl<>("time", o -> o.getTime().orElse(null), Races::setTime);
    /**
     * This Field corresponds to the {@link Races} field that can be obtained
     * using the {@link Races#getUrl()} method.
     */
    public final static StringField<Races> URL = new StringFieldImpl<>("url", o -> o.getUrl().orElse(null), Races::setUrl);
    
    /**
     * Returns the raceId of this Races. The raceId field corresponds to the
     * database column db0.F1APP.races.raceId.
     * 
     * @return the raceId of this Races
     */
    Integer getRaceId();
    
    /**
     * Returns the year of this Races. The year field corresponds to the database
     * column db0.F1APP.races.year.
     * 
     * @return the year of this Races
     */
    Integer getYear();
    
    /**
     * Returns the round of this Races. The round field corresponds to the
     * database column db0.F1APP.races.round.
     * 
     * @return the round of this Races
     */
    Integer getRound();
    
    /**
     * Returns the circuitId of this Races. The circuitId field corresponds to
     * the database column db0.F1APP.races.circuitId.
     * 
     * @return the circuitId of this Races
     */
    Integer getCircuitId();
    
    /**
     * Returns the name of this Races. The name field corresponds to the database
     * column db0.F1APP.races.name.
     * 
     * @return the name of this Races
     */
    String getName();
    
    /**
     * Returns the date of this Races. The date field corresponds to the database
     * column db0.F1APP.races.date.
     * 
     * @return the date of this Races
     */
    Date getDate();
    
    /**
     * Returns the time of this Races. The time field corresponds to the database
     * column db0.F1APP.races.time.
     * 
     * @return the time of this Races
     */
    Optional<Time> getTime();
    
    /**
     * Returns the url of this Races. The url field corresponds to the database
     * column db0.F1APP.races.url.
     * 
     * @return the url of this Races
     */
    Optional<String> getUrl();
    
    /**
     * Sets the raceId of this Races. The raceId field corresponds to the
     * database column db0.F1APP.races.raceId.
     * 
     * @param raceId to set of this Races
     * @return this Races instance
     */
    Races setRaceId(Integer raceId);
    
    /**
     * Sets the year of this Races. The year field corresponds to the database
     * column db0.F1APP.races.year.
     * 
     * @param year to set of this Races
     * @return this Races instance
     */
    Races setYear(Integer year);
    
    /**
     * Sets the round of this Races. The round field corresponds to the database
     * column db0.F1APP.races.round.
     * 
     * @param round to set of this Races
     * @return this Races instance
     */
    Races setRound(Integer round);
    
    /**
     * Sets the circuitId of this Races. The circuitId field corresponds to the
     * database column db0.F1APP.races.circuitId.
     * 
     * @param circuitId to set of this Races
     * @return this Races instance
     */
    Races setCircuitId(Integer circuitId);
    
    /**
     * Sets the name of this Races. The name field corresponds to the database
     * column db0.F1APP.races.name.
     * 
     * @param name to set of this Races
     * @return this Races instance
     */
    Races setName(String name);
    
    /**
     * Sets the date of this Races. The date field corresponds to the database
     * column db0.F1APP.races.date.
     * 
     * @param date to set of this Races
     * @return this Races instance
     */
    Races setDate(Date date);
    
    /**
     * Sets the time of this Races. The time field corresponds to the database
     * column db0.F1APP.races.time.
     * 
     * @param time to set of this Races
     * @return this Races instance
     */
    Races setTime(Time time);
    
    /**
     * Sets the url of this Races. The url field corresponds to the database
     * column db0.F1APP.races.url.
     * 
     * @param url to set of this Races
     * @return this Races instance
     */
    Races setUrl(String url);
}