package com.company.speedment.test.f1app.db0.f1app.seasons.impl;

import com.company.speedment.test.f1app.db0.f1app.seasons.Seasons;
import com.speedment.Speedment;
import com.speedment.internal.core.code.AbstractBaseEntity;
import java.util.Objects;
import java.util.StringJoiner;
import javax.annotation.Generated;

/**
 * An implementation representing an entity (for example, a row) in the
 * com.speedment.internal.ui.config.TableProperty@4e6c7489.
 * <p>
 * This Class or Interface has been automatically generated by Speedment. Any
 * changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public final class SeasonsImpl extends AbstractBaseEntity<Seasons> implements Seasons {
    
    private Integer year;
    private String url;
    
    SeasonsImpl(Speedment speedment) {
        super(speedment);
    }
    
    public SeasonsImpl(Speedment speedment, final Seasons seasons) {
        super(speedment);
        setYear(seasons.getYear());
        setUrl(seasons.getUrl());
    }
    
    @Override
    public Integer getYear() {
        return year;
    }
    
    @Override
    public String getUrl() {
        return url;
    }
    
    @Override
    public final SeasonsImpl setYear(Integer year) {
        this.year = year;
        return this;
    }
    
    @Override
    public final SeasonsImpl setUrl(String url) {
        this.url = url;
        return this;
    }
    
    @Override
    public Seasons copy() {
        return new SeasonsImpl(getSpeedment_(), this);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("year = "+Objects.toString(getYear()));
        sj.add("url = "+Objects.toString(getUrl()));
        return "SeasonsImpl "+sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Seasons)) { return false; }
        @SuppressWarnings("unchecked")
        final Seasons thatSeasons = (Seasons)that;
        if (!Objects.equals(this.getYear(), thatSeasons.getYear())) {return false; }
        if (!Objects.equals(this.getUrl(), thatSeasons.getUrl())) {return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(getYear());
        hash = 31 * hash + Objects.hashCode(getUrl());
        return hash;
    }
    
    @Override
    public Class<Seasons> getEntityClass_() {
        return Seasons.class;
    }
}