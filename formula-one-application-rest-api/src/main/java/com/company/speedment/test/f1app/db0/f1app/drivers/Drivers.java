package com.company.speedment.test.f1app.db0.f1app.drivers;

import com.speedment.Entity;
import com.speedment.field.ComparableField;
import com.speedment.field.StringField;
import com.speedment.internal.core.field.ComparableFieldImpl;
import com.speedment.internal.core.field.StringFieldImpl;
import java.sql.Date;
import java.util.Optional;
import javax.annotation.Generated;

/**
 * An interface representing an entity (for example, a row) in the Table
 * 'f1app.db0.F1APP.drivers'.
 * <p>
 * This Class or Interface has been automatically generated by Speedment. Any
 * changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public interface Drivers extends Entity<Drivers> {
    
    /**
     * This Field corresponds to the {@link Drivers} field that can be obtained
     * using the {@link Drivers#getDriverId()} method.
     */
    public final static ComparableField<Drivers, Integer> DRIVERID = new ComparableFieldImpl<>("driverId", Drivers::getDriverId, Drivers::setDriverId);
    /**
     * This Field corresponds to the {@link Drivers} field that can be obtained
     * using the {@link Drivers#getDriverRef()} method.
     */
    public final static StringField<Drivers> DRIVERREF = new StringFieldImpl<>("driverRef", Drivers::getDriverRef, Drivers::setDriverRef);
    /**
     * This Field corresponds to the {@link Drivers} field that can be obtained
     * using the {@link Drivers#getNumber()} method.
     */
    public final static ComparableField<Drivers, Integer> NUMBER = new ComparableFieldImpl<>("number", o -> o.getNumber().orElse(null), Drivers::setNumber);
    /**
     * This Field corresponds to the {@link Drivers} field that can be obtained
     * using the {@link Drivers#getCode()} method.
     */
    public final static StringField<Drivers> CODE = new StringFieldImpl<>("code", o -> o.getCode().orElse(null), Drivers::setCode);
    /**
     * This Field corresponds to the {@link Drivers} field that can be obtained
     * using the {@link Drivers#getForename()} method.
     */
    public final static StringField<Drivers> FORENAME = new StringFieldImpl<>("forename", Drivers::getForename, Drivers::setForename);
    /**
     * This Field corresponds to the {@link Drivers} field that can be obtained
     * using the {@link Drivers#getSurname()} method.
     */
    public final static StringField<Drivers> SURNAME = new StringFieldImpl<>("surname", Drivers::getSurname, Drivers::setSurname);
    /**
     * This Field corresponds to the {@link Drivers} field that can be obtained
     * using the {@link Drivers#getDob()} method.
     */
    public final static ComparableField<Drivers, Date> DOB = new ComparableFieldImpl<>("dob", o -> o.getDob().orElse(null), Drivers::setDob);
    /**
     * This Field corresponds to the {@link Drivers} field that can be obtained
     * using the {@link Drivers#getNationality()} method.
     */
    public final static StringField<Drivers> NATIONALITY = new StringFieldImpl<>("nationality", o -> o.getNationality().orElse(null), Drivers::setNationality);
    /**
     * This Field corresponds to the {@link Drivers} field that can be obtained
     * using the {@link Drivers#getUrl()} method.
     */
    public final static StringField<Drivers> URL = new StringFieldImpl<>("url", Drivers::getUrl, Drivers::setUrl);
    
    /**
     * Returns the driverId of this Drivers. The driverId field corresponds to
     * the database column db0.F1APP.drivers.driverId.
     * 
     * @return the driverId of this Drivers
     */
    Integer getDriverId();
    
    /**
     * Returns the driverRef of this Drivers. The driverRef field corresponds to
     * the database column db0.F1APP.drivers.driverRef.
     * 
     * @return the driverRef of this Drivers
     */
    String getDriverRef();
    
    /**
     * Returns the number of this Drivers. The number field corresponds to the
     * database column db0.F1APP.drivers.number.
     * 
     * @return the number of this Drivers
     */
    Optional<Integer> getNumber();
    
    /**
     * Returns the code of this Drivers. The code field corresponds to the
     * database column db0.F1APP.drivers.code.
     * 
     * @return the code of this Drivers
     */
    Optional<String> getCode();
    
    /**
     * Returns the forename of this Drivers. The forename field corresponds to
     * the database column db0.F1APP.drivers.forename.
     * 
     * @return the forename of this Drivers
     */
    String getForename();
    
    /**
     * Returns the surname of this Drivers. The surname field corresponds to the
     * database column db0.F1APP.drivers.surname.
     * 
     * @return the surname of this Drivers
     */
    String getSurname();
    
    /**
     * Returns the dob of this Drivers. The dob field corresponds to the database
     * column db0.F1APP.drivers.dob.
     * 
     * @return the dob of this Drivers
     */
    Optional<Date> getDob();
    
    /**
     * Returns the nationality of this Drivers. The nationality field corresponds
     * to the database column db0.F1APP.drivers.nationality.
     * 
     * @return the nationality of this Drivers
     */
    Optional<String> getNationality();
    
    /**
     * Returns the url of this Drivers. The url field corresponds to the database
     * column db0.F1APP.drivers.url.
     * 
     * @return the url of this Drivers
     */
    String getUrl();
    
    /**
     * Sets the driverId of this Drivers. The driverId field corresponds to the
     * database column db0.F1APP.drivers.driverId.
     * 
     * @param driverId to set of this Drivers
     * @return this Drivers instance
     */
    Drivers setDriverId(Integer driverId);
    
    /**
     * Sets the driverRef of this Drivers. The driverRef field corresponds to the
     * database column db0.F1APP.drivers.driverRef.
     * 
     * @param driverRef to set of this Drivers
     * @return this Drivers instance
     */
    Drivers setDriverRef(String driverRef);
    
    /**
     * Sets the number of this Drivers. The number field corresponds to the
     * database column db0.F1APP.drivers.number.
     * 
     * @param number to set of this Drivers
     * @return this Drivers instance
     */
    Drivers setNumber(Integer number);
    
    /**
     * Sets the code of this Drivers. The code field corresponds to the database
     * column db0.F1APP.drivers.code.
     * 
     * @param code to set of this Drivers
     * @return this Drivers instance
     */
    Drivers setCode(String code);
    
    /**
     * Sets the forename of this Drivers. The forename field corresponds to the
     * database column db0.F1APP.drivers.forename.
     * 
     * @param forename to set of this Drivers
     * @return this Drivers instance
     */
    Drivers setForename(String forename);
    
    /**
     * Sets the surname of this Drivers. The surname field corresponds to the
     * database column db0.F1APP.drivers.surname.
     * 
     * @param surname to set of this Drivers
     * @return this Drivers instance
     */
    Drivers setSurname(String surname);
    
    /**
     * Sets the dob of this Drivers. The dob field corresponds to the database
     * column db0.F1APP.drivers.dob.
     * 
     * @param dob to set of this Drivers
     * @return this Drivers instance
     */
    Drivers setDob(Date dob);
    
    /**
     * Sets the nationality of this Drivers. The nationality field corresponds to
     * the database column db0.F1APP.drivers.nationality.
     * 
     * @param nationality to set of this Drivers
     * @return this Drivers instance
     */
    Drivers setNationality(String nationality);
    
    /**
     * Sets the url of this Drivers. The url field corresponds to the database
     * column db0.F1APP.drivers.url.
     * 
     * @param url to set of this Drivers
     * @return this Drivers instance
     */
    Drivers setUrl(String url);
}