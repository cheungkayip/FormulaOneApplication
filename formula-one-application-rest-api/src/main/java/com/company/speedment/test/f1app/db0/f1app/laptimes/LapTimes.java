package com.company.speedment.test.f1app.db0.f1app.laptimes;

import com.speedment.Entity;
import com.speedment.field.ComparableField;
import com.speedment.field.StringField;
import com.speedment.internal.core.field.ComparableFieldImpl;
import com.speedment.internal.core.field.StringFieldImpl;
import java.util.Optional;
import javax.annotation.Generated;

/**
 * An interface representing an entity (for example, a row) in the Table
 * 'f1app.db0.F1APP.lapTimes'.
 * <p>
 * This Class or Interface has been automatically generated by Speedment. Any
 * changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public interface LapTimes extends Entity<LapTimes> {
    
    /**
     * This Field corresponds to the {@link LapTimes} field that can be obtained
     * using the {@link LapTimes#getRaceId()} method.
     */
    public final static ComparableField<LapTimes, Integer> RACEID = new ComparableFieldImpl<>("raceId", LapTimes::getRaceId, LapTimes::setRaceId);
    /**
     * This Field corresponds to the {@link LapTimes} field that can be obtained
     * using the {@link LapTimes#getDriverId()} method.
     */
    public final static ComparableField<LapTimes, Integer> DRIVERID = new ComparableFieldImpl<>("driverId", LapTimes::getDriverId, LapTimes::setDriverId);
    /**
     * This Field corresponds to the {@link LapTimes} field that can be obtained
     * using the {@link LapTimes#getLap()} method.
     */
    public final static ComparableField<LapTimes, Integer> LAP = new ComparableFieldImpl<>("lap", LapTimes::getLap, LapTimes::setLap);
    /**
     * This Field corresponds to the {@link LapTimes} field that can be obtained
     * using the {@link LapTimes#getPosition()} method.
     */
    public final static ComparableField<LapTimes, Integer> POSITION = new ComparableFieldImpl<>("position", o -> o.getPosition().orElse(null), LapTimes::setPosition);
    /**
     * This Field corresponds to the {@link LapTimes} field that can be obtained
     * using the {@link LapTimes#getTime()} method.
     */
    public final static StringField<LapTimes> TIME = new StringFieldImpl<>("time", o -> o.getTime().orElse(null), LapTimes::setTime);
    /**
     * This Field corresponds to the {@link LapTimes} field that can be obtained
     * using the {@link LapTimes#getMilliseconds()} method.
     */
    public final static ComparableField<LapTimes, Integer> MILLISECONDS = new ComparableFieldImpl<>("milliseconds", o -> o.getMilliseconds().orElse(null), LapTimes::setMilliseconds);
    
    /**
     * Returns the raceId of this LapTimes. The raceId field corresponds to the
     * database column db0.F1APP.lapTimes.raceId.
     * 
     * @return the raceId of this LapTimes
     */
    Integer getRaceId();
    
    /**
     * Returns the driverId of this LapTimes. The driverId field corresponds to
     * the database column db0.F1APP.lapTimes.driverId.
     * 
     * @return the driverId of this LapTimes
     */
    Integer getDriverId();
    
    /**
     * Returns the lap of this LapTimes. The lap field corresponds to the
     * database column db0.F1APP.lapTimes.lap.
     * 
     * @return the lap of this LapTimes
     */
    Integer getLap();
    
    /**
     * Returns the position of this LapTimes. The position field corresponds to
     * the database column db0.F1APP.lapTimes.position.
     * 
     * @return the position of this LapTimes
     */
    Optional<Integer> getPosition();
    
    /**
     * Returns the time of this LapTimes. The time field corresponds to the
     * database column db0.F1APP.lapTimes.time.
     * 
     * @return the time of this LapTimes
     */
    Optional<String> getTime();
    
    /**
     * Returns the milliseconds of this LapTimes. The milliseconds field
     * corresponds to the database column db0.F1APP.lapTimes.milliseconds.
     * 
     * @return the milliseconds of this LapTimes
     */
    Optional<Integer> getMilliseconds();
    
    /**
     * Sets the raceId of this LapTimes. The raceId field corresponds to the
     * database column db0.F1APP.lapTimes.raceId.
     * 
     * @param raceId to set of this LapTimes
     * @return this LapTimes instance
     */
    LapTimes setRaceId(Integer raceId);
    
    /**
     * Sets the driverId of this LapTimes. The driverId field corresponds to the
     * database column db0.F1APP.lapTimes.driverId.
     * 
     * @param driverId to set of this LapTimes
     * @return this LapTimes instance
     */
    LapTimes setDriverId(Integer driverId);
    
    /**
     * Sets the lap of this LapTimes. The lap field corresponds to the database
     * column db0.F1APP.lapTimes.lap.
     * 
     * @param lap to set of this LapTimes
     * @return this LapTimes instance
     */
    LapTimes setLap(Integer lap);
    
    /**
     * Sets the position of this LapTimes. The position field corresponds to the
     * database column db0.F1APP.lapTimes.position.
     * 
     * @param position to set of this LapTimes
     * @return this LapTimes instance
     */
    LapTimes setPosition(Integer position);
    
    /**
     * Sets the time of this LapTimes. The time field corresponds to the database
     * column db0.F1APP.lapTimes.time.
     * 
     * @param time to set of this LapTimes
     * @return this LapTimes instance
     */
    LapTimes setTime(String time);
    
    /**
     * Sets the milliseconds of this LapTimes. The milliseconds field corresponds
     * to the database column db0.F1APP.lapTimes.milliseconds.
     * 
     * @param milliseconds to set of this LapTimes
     * @return this LapTimes instance
     */
    LapTimes setMilliseconds(Integer milliseconds);
}