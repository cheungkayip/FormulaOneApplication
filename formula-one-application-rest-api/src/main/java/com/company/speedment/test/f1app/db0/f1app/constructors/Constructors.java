package com.company.speedment.test.f1app.db0.f1app.constructors;

import com.speedment.Entity;
import com.speedment.field.ComparableField;
import com.speedment.field.StringField;
import com.speedment.internal.core.field.ComparableFieldImpl;
import com.speedment.internal.core.field.StringFieldImpl;
import java.util.Optional;
import javax.annotation.Generated;

/**
 * An interface representing an entity (for example, a row) in the
 * com.speedment.internal.ui.config.TableProperty@286108bf.
 * <p>
 * This Class or Interface has been automatically generated by Speedment. Any
 * changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public interface Constructors extends Entity<Constructors> {
    
    /**
     * This Field corresponds to the {@link Constructors} field that can be
     * obtained using the {@link Constructors#getConstructorId()} method.
     */
    public final static ComparableField<Constructors, Integer> CONSTRUCTORID = new ComparableFieldImpl<>("constructorId", Constructors::getConstructorId, Constructors::setConstructorId);
    /**
     * This Field corresponds to the {@link Constructors} field that can be
     * obtained using the {@link Constructors#getConstructorRef()} method.
     */
    public final static StringField<Constructors> CONSTRUCTORREF = new StringFieldImpl<>("constructorRef", Constructors::getConstructorRef, Constructors::setConstructorRef);
    /**
     * This Field corresponds to the {@link Constructors} field that can be
     * obtained using the {@link Constructors#getName()} method.
     */
    public final static StringField<Constructors> NAME = new StringFieldImpl<>("name", Constructors::getName, Constructors::setName);
    /**
     * This Field corresponds to the {@link Constructors} field that can be
     * obtained using the {@link Constructors#getNationality()} method.
     */
    public final static StringField<Constructors> NATIONALITY = new StringFieldImpl<>("nationality", o -> o.getNationality().orElse(null), Constructors::setNationality);
    /**
     * This Field corresponds to the {@link Constructors} field that can be
     * obtained using the {@link Constructors#getUrl()} method.
     */
    public final static StringField<Constructors> URL = new StringFieldImpl<>("url", Constructors::getUrl, Constructors::setUrl);
    
    /**
     * Returns the constructorId of this Constructors. The constructorId field
     * corresponds to the database column db0.F1APP.constructors.constructorId.
     * 
     * @return the constructorId of this Constructors
     */
    Integer getConstructorId();
    
    /**
     * Returns the constructorRef of this Constructors. The constructorRef field
     * corresponds to the database column db0.F1APP.constructors.constructorRef.
     * 
     * @return the constructorRef of this Constructors
     */
    String getConstructorRef();
    
    /**
     * Returns the name of this Constructors. The name field corresponds to the
     * database column db0.F1APP.constructors.name.
     * 
     * @return the name of this Constructors
     */
    String getName();
    
    /**
     * Returns the nationality of this Constructors. The nationality field
     * corresponds to the database column db0.F1APP.constructors.nationality.
     * 
     * @return the nationality of this Constructors
     */
    Optional<String> getNationality();
    
    /**
     * Returns the url of this Constructors. The url field corresponds to the
     * database column db0.F1APP.constructors.url.
     * 
     * @return the url of this Constructors
     */
    String getUrl();
    
    /**
     * Sets the constructorId of this Constructors. The constructorId field
     * corresponds to the database column db0.F1APP.constructors.constructorId.
     * 
     * @param constructorId to set of this Constructors
     * @return this Constructors instance
     */
    Constructors setConstructorId(Integer constructorId);
    
    /**
     * Sets the constructorRef of this Constructors. The constructorRef field
     * corresponds to the database column db0.F1APP.constructors.constructorRef.
     * 
     * @param constructorRef to set of this Constructors
     * @return this Constructors instance
     */
    Constructors setConstructorRef(String constructorRef);
    
    /**
     * Sets the name of this Constructors. The name field corresponds to the
     * database column db0.F1APP.constructors.name.
     * 
     * @param name to set of this Constructors
     * @return this Constructors instance
     */
    Constructors setName(String name);
    
    /**
     * Sets the nationality of this Constructors. The nationality field
     * corresponds to the database column db0.F1APP.constructors.nationality.
     * 
     * @param nationality to set of this Constructors
     * @return this Constructors instance
     */
    Constructors setNationality(String nationality);
    
    /**
     * Sets the url of this Constructors. The url field corresponds to the
     * database column db0.F1APP.constructors.url.
     * 
     * @param url to set of this Constructors
     * @return this Constructors instance
     */
    Constructors setUrl(String url);
}