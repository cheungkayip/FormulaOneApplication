package com.company.speedment.test.f1app.db0.f1app.status.impl;

import com.company.speedment.test.f1app.db0.f1app.status.Status;
import com.speedment.Speedment;
import com.speedment.config.Column;
import com.speedment.config.Table;
import com.speedment.config.mapper.TypeMapper;
import com.speedment.exception.SpeedmentException;
import com.speedment.internal.core.config.mapper.identity.IntegerIdentityMapper;
import com.speedment.internal.core.config.mapper.identity.StringIdentityMapper;
import com.speedment.internal.core.manager.sql.AbstractSqlManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.annotation.Generated;

/**
 * A manager implementation representing an entity (for example, a row) in
 * the com.speedment.internal.ui.config.TableProperty@7c097190.
 * <p>
 * This Class or Interface has been automatically generated by Speedment. Any
 * changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public class StatusManagerImpl extends AbstractSqlManager<Status> {
    
    private final TypeMapper<Integer, Integer> statusIdTypeMapper = new IntegerIdentityMapper();
    private final TypeMapper<String, String> statusTypeMapper = new StringIdentityMapper();
    
    public StatusManagerImpl(Speedment speedment) {
        super(speedment);
        setSqlEntityMapper(this::defaultReadEntity);
    }
    
    @Override
    public Class<Status> getEntityClass() {
        return Status.class;
    }
    
    @Override
    public Object get(Status entity, Column column) {
        switch (column.getName()) {
            case "statusId" : return entity.getStatusId();
            case "status" : return entity.getStatus();
            default : throw new IllegalArgumentException("Unknown column '" + column.getName() + "'.");
        }
    }
    
    @Override
    public void set(Status entity, Column column, Object value) {
        switch (column.getName()) {
            case "statusId" : entity.setStatusId((Integer) value); break;
            case "status" : entity.setStatus((String) value); break;
            default : throw new IllegalArgumentException("Unknown column '" + column.getName() + "'.");
        }
    }
    
    @Override
    public Table getTable() {
        return speedment.getProjectComponent().getProject().findTableByName("db0.F1APP.status");
    }
    
    protected Status defaultReadEntity(ResultSet resultSet) {
        final Status entity = newInstance();
        try {
            entity.setStatusId(statusIdTypeMapper.toJavaType(resultSet.getInt(1)));
            entity.setStatus(statusTypeMapper.toJavaType(resultSet.getString(2)));
        }
        catch (SQLException sqle) {
            throw new SpeedmentException(sqle);
        }
        return entity;
    }
    
    @Override
    public Status newInstance() {
        return new StatusImpl(speedment);
    }
    
    @Override
    public Integer primaryKeyFor(Status entity) {
        return entity.getStatusId();
    }
}