package com.company.speedment.test.f1app.db0.f1app.imagesdrivers;

import com.speedment.Entity;
import com.speedment.field.StringField;
import com.speedment.internal.core.field.StringFieldImpl;
import java.util.Optional;
import javax.annotation.Generated;

/**
 * An interface representing an entity (for example, a row) in the
 * com.speedment.internal.ui.config.TableProperty@5219cbb3.
 * <p>
 * This Class or Interface has been automatically generated by Speedment. Any
 * changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public interface ImagesDrivers extends Entity<ImagesDrivers> {
    
    /**
     * This Field corresponds to the {@link ImagesDrivers} field that can be
     * obtained using the {@link ImagesDrivers#getDriverDisplayImage()} method.
     */
    public final static StringField<ImagesDrivers> DRIVERDISPLAYIMAGE = new StringFieldImpl<>("driverDisplayImage", o -> o.getDriverDisplayImage().orElse(null), ImagesDrivers::setDriverDisplayImage);
    /**
     * This Field corresponds to the {@link ImagesDrivers} field that can be
     * obtained using the {@link ImagesDrivers#getDriverHelmet()} method.
     */
    public final static StringField<ImagesDrivers> DRIVERHELMET = new StringFieldImpl<>("driverHelmet", o -> o.getDriverHelmet().orElse(null), ImagesDrivers::setDriverHelmet);
    /**
     * This Field corresponds to the {@link ImagesDrivers} field that can be
     * obtained using the {@link ImagesDrivers#getLastName()} method.
     */
    public final static StringField<ImagesDrivers> LASTNAME = new StringFieldImpl<>("LastName", o -> o.getLastName().orElse(null), ImagesDrivers::setLastName);
    /**
     * This Field corresponds to the {@link ImagesDrivers} field that can be
     * obtained using the {@link ImagesDrivers#getDriverImageId()} method.
     */
    public final static StringField<ImagesDrivers> DRIVERIMAGEID = new StringFieldImpl<>("driverImageId", ImagesDrivers::getDriverImageId, ImagesDrivers::setDriverImageId);
    /**
     * This Field corresponds to the {@link ImagesDrivers} field that can be
     * obtained using the {@link ImagesDrivers#getDriverFlag()} method.
     */
    public final static StringField<ImagesDrivers> DRIVERFLAG = new StringFieldImpl<>("driverFlag", o -> o.getDriverFlag().orElse(null), ImagesDrivers::setDriverFlag);
    
    /**
     * Returns the driverDisplayImage of this ImagesDrivers. The
     * driverDisplayImage field corresponds to the database column
     * db0.F1APP.ImagesDrivers.driverDisplayImage.
     * 
     * @return the driverDisplayImage of this ImagesDrivers
     */
    Optional<String> getDriverDisplayImage();
    
    /**
     * Returns the driverHelmet of this ImagesDrivers. The driverHelmet field
     * corresponds to the database column db0.F1APP.ImagesDrivers.driverHelmet.
     * 
     * @return the driverHelmet of this ImagesDrivers
     */
    Optional<String> getDriverHelmet();
    
    /**
     * Returns the lastName of this ImagesDrivers. The lastName field corresponds
     * to the database column db0.F1APP.ImagesDrivers.LastName.
     * 
     * @return the lastName of this ImagesDrivers
     */
    Optional<String> getLastName();
    
    /**
     * Returns the driverImageId of this ImagesDrivers. The driverImageId field
     * corresponds to the database column db0.F1APP.ImagesDrivers.driverImageId.
     * 
     * @return the driverImageId of this ImagesDrivers
     */
    String getDriverImageId();
    
    /**
     * Returns the driverFlag of this ImagesDrivers. The driverFlag field
     * corresponds to the database column db0.F1APP.ImagesDrivers.driverFlag.
     * 
     * @return the driverFlag of this ImagesDrivers
     */
    Optional<String> getDriverFlag();
    
    /**
     * Sets the driverDisplayImage of this ImagesDrivers. The driverDisplayImage
     * field corresponds to the database column
     * db0.F1APP.ImagesDrivers.driverDisplayImage.
     * 
     * @param driverDisplayImage to set of this ImagesDrivers
     * @return this ImagesDrivers instance
     */
    ImagesDrivers setDriverDisplayImage(String driverDisplayImage);
    
    /**
     * Sets the driverHelmet of this ImagesDrivers. The driverHelmet field
     * corresponds to the database column db0.F1APP.ImagesDrivers.driverHelmet.
     * 
     * @param driverHelmet to set of this ImagesDrivers
     * @return this ImagesDrivers instance
     */
    ImagesDrivers setDriverHelmet(String driverHelmet);
    
    /**
     * Sets the lastName of this ImagesDrivers. The lastName field corresponds to
     * the database column db0.F1APP.ImagesDrivers.LastName.
     * 
     * @param lastName to set of this ImagesDrivers
     * @return this ImagesDrivers instance
     */
    ImagesDrivers setLastName(String lastName);
    
    /**
     * Sets the driverImageId of this ImagesDrivers. The driverImageId field
     * corresponds to the database column db0.F1APP.ImagesDrivers.driverImageId.
     * 
     * @param driverImageId to set of this ImagesDrivers
     * @return this ImagesDrivers instance
     */
    ImagesDrivers setDriverImageId(String driverImageId);
    
    /**
     * Sets the driverFlag of this ImagesDrivers. The driverFlag field
     * corresponds to the database column db0.F1APP.ImagesDrivers.driverFlag.
     * 
     * @param driverFlag to set of this ImagesDrivers
     * @return this ImagesDrivers instance
     */
    ImagesDrivers setDriverFlag(String driverFlag);
}